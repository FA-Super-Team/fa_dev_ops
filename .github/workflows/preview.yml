name: Preview
on:
  push:
    branches:
      - 'master'
      - 'releases/**'
    paths-ignore:
      - '**/README.md'
      - '**/LICENSE'
  pull_request:
    branches:
      - 'master'
      - 'releases/**'
    paths-ignore:
      - '**/README.md'
      - '**/LICENSE'
  workflow_dispatch:
jobs:
  analyze_test:
    name: Analyze Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get Flutter version
        id: get-flutter-version
        uses: zgosalvez/github-actions-get-flutter-version-env@v1
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.get-flutter-version.outputs.version }}
          channel: 'stable'
          cache: true
          cache-key: ${{ env.cache-name }}-ubuntu-latest-${{ steps.get-flutter-version.outputs.version }}
          cache-path: ${{ runner.tool_cache }}/flutter
          # cache-key: ${{ env.cache-name }}-ubuntu-latest-${{ steps.get-flutter-version.outputs.version }}-${{ hashFiles('code/pubspec.lock') }}
        env:
          cache-name: flutter-cache
      - name: Flutter Version
        run: flutter --version
      - name: Pub Get
        run: flutter pub get
      - name: Analyze Code
        continue-on-error: true
        run: |
          flutter analyze || echo passed
      - name: Test
        run: flutter test
  build_android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: [analyze_test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11.x'
      - name: Get Flutter version
        id: get-flutter-version
        uses: zgosalvez/github-actions-get-flutter-version-env@v1
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.get-flutter-version.outputs.version }}
          channel: 'stable'
          cache: true
          cache-key: ${{ env.cache-name }}-ubuntu-latest-${{ steps.get-flutter-version.outputs.version }}
          cache-path: ${{ runner.tool_cache }}/flutter
          # cache-key: ${{ env.cache-name }}-ubuntu-latest-${{ steps.get-flutter-version.outputs.version }}-${{ hashFiles('code/pubspec.lock') }}
        env:
          cache-name: flutter-cache
      - name: Pub Get
        run: flutter pub get
      - name: Build APK
        run: flutter build apk --build-name=app-preview
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: PreviewAPK
          path: build/app/outputs/apk/release/*.apk
  build_splited_android:
    name: Build Splited Android
    runs-on: ubuntu-latest
    needs: [analyze_test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11.x'
      - name: Get Flutter version
        id: get-flutter-version
        uses: zgosalvez/github-actions-get-flutter-version-env@v1
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.get-flutter-version.outputs.version }}
          channel: 'stable'
          cache: true
          cache-key: ${{ env.cache-name }}-ubuntu-latest-${{ steps.get-flutter-version.outputs.version }}
          cache-path: ${{ runner.tool_cache }}/flutter
          # cache-key: ${{ env.cache-name }}-ubuntu-latest-${{ steps.get-flutter-version.outputs.version }}-${{ hashFiles('code/pubspec.lock') }}
        env:
          cache-name: flutter-cache
      - name: Pub Get
        run: flutter pub get
      - name: Build Splited APKs
        run: flutter build apk --split-per-abi --build-name=app-preview
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: SplitedPreviewAPKs
          path: build/app/outputs/apk/release/*.apk

#  Need Podfile to configure IOS version to build success
#  build_ios:
#    name: Build IOS
#    runs-on: macos-latest
#    needs: [analyze_test]
#    steps:
#      - uses: actions/checkout@v2
#      - uses: subosito/flutter-action@v2
#        with:
#          # ! remember to enable caching for os matrix (view template folder 2)
#          flutter-version: '2.10.x'
#      - name: Pub Get
#        run: flutter pub get
#      - name: Build IPA
#        run: flutter build ios --release --no-codesign
