name: Build
on:
  push:
    paths-ignore:
      - '**/README.md'
      - '**/LICENSE'
  pull_request:
    paths-ignore:
      - '**/README.md'
      - '**/LICENSE'
  workflow_dispatch:
  repository_dispatch:
jobs:
  remote_check:
    name: Remote Check
    runs-on: ubuntu-latest
    steps:
      - name: Check out my other private repo
        uses: actions/checkout@v3
        with:
          repository: FA-Super-Team/fa_master
          token: ${{ secrets.TOKEN }}
          path: '.'
      - name: Get Flutter version
        id: get-flutter-version
        uses: zgosalvez/github-actions-get-flutter-version-env@v1
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.get-flutter-version.outputs.version }}
          channel: 'stable'
          cache: true
          cache-key: ${{ env.cache-name }}-ubuntu-latest-${{ steps.get-flutter-version.outputs.version }}
          cache-path: ${{ runner.tool_cache }}/flutter
        env:
          cache-name: flutter-cache
      - name: Flutter Version
        run: flutter --version
      - name: Pub Get
        run: flutter pub get
      - name: Analyze Code
        continue-on-error: true
        run: |
          flutter analyze || echo passed
      - name: Test
        run: flutter test
  build_android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: [remote_check]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: FA-Super-Team/fa_master
          token: ${{ secrets.TOKEN }}
          path: '.'
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11.x'
      - name: Get Flutter version
        id: get-flutter-version
        uses: zgosalvez/github-actions-get-flutter-version-env@v1
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.get-flutter-version.outputs.version }}
          channel: 'stable'
          cache: true
          cache-key: ${{ env.cache-name }}-ubuntu-latest-${{ steps.get-flutter-version.outputs.version }}
          cache-path: ${{ runner.tool_cache }}/flutter
        env:
          cache-name: flutter-cache
      - name: Pub Get
        run: flutter pub get
      - name: Build APK
        run: flutter build apk --debug
#  build_ios:
#    name: Build IOS
#    runs-on: macos-latest
#    needs: [remote_check]
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          repository: FA-Super-Team/fa_master
#          token: ${{ secrets.TOKEN }}
#          path: '.'
#      - name: Get Flutter version
#        id: get-flutter-version
#        uses: zgosalvez/github-actions-get-flutter-version-env@v1
#      - name: Setup Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          flutter-version: ${{ steps.get-flutter-version.outputs.version }}
#          channel: 'stable'
#          cache: true
#          cache-key: ${{ env.cache-name }}-macos-latest-${{ steps.get-flutter-version.outputs.version }}
#          cache-path: ${{ runner.tool_cache }}/flutter
#        env:
#          cache-name: flutter-cache
#      - name: Pub Get
#        run: flutter pub get
#      - name: Build IPA
#        run: flutter build ios --release --no-codesign
  success_trigger:
    name: Trigger Success Event
    runs-on: ubuntu-latest
    needs: [build_android]
    # needs: [build_android,build_ios]
    if: ${{ needs.build_android.result == 'success' }} # && needs.build_ios.outcome == 'success'
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'FA-Super-Team',
              repo: 'fa_master',
              workflow_id: 'success.yml',
              ref: 'master'
            })
  failure_trigger:
    name: Trigger Failure Event
    runs-on: ubuntu-latest
    needs: [build_android]
    if: ${{ needs.build_android.result != 'success' }} # && needs.build_ios.outcome != 'success'
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'FA-Super-Team',
              repo: 'fa_master',
              workflow_id: 'failure.yml',
              ref: 'master'
            })
